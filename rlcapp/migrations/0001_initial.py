# Generated by Django 3.2.8 on 2021-11-11 00:52

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=200, verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=200, verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, max_length=200, verbose_name='Last Name')),
                ('faculty_id', models.CharField(default='0000000000', max_length=10, unique=True, verbose_name='Faculty ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('designation', models.CharField(choices=[('INST', 'Instructor'), ('ASCP', 'Associate Professor'), ('ASTP', 'Assistant Professor'), ('PROF', 'Professor')], default='INST', max_length=4)),
                ('rank', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], default='1', max_length=1)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='signatures')),
                ('access_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='auth.group', verbose_name='Access Level')),
            ],
            options={
                'verbose_name_plural': 'Faculty Members',
            },
        ),
        migrations.CreateModel(
            name='Applications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, verbose_name='Project Name')),
                ('original_name', models.CharField(blank=True, max_length=500, verbose_name='Original Name')),
                ('date_started', models.DateField(default=datetime.datetime(2021, 11, 11, 0, 52, 36, 71810, tzinfo=utc), verbose_name='Date Started')),
                ('date_completed', models.DateField(blank=True, null=True, verbose_name='Date Completed')),
                ('percent_completed', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)], verbose_name='Percent Completed')),
                ('proposal_attachment_file', models.FileField(blank=True, upload_to='RLC Applications', verbose_name='Proposal Attachment')),
                ('authors', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL, verbose_name='Faculty Involved')),
            ],
            options={
                'verbose_name_plural': 'Applications',
                'permissions': [('can_approve_reject', 'Can Approve or Reject RLC')],
            },
        ),
        migrations.CreateModel(
            name='Progress_Reports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_report_file', models.FileField(upload_to='RLC Applications/Progress Reports', verbose_name='Progress Report')),
                ('accomplishments_file', models.FileField(upload_to='RLC Applications/Progress Reports/Accomplishments', verbose_name='Accomplishments')),
                ('fund_utilization_file', models.FileField(upload_to='RLC Applications/Progress Reports/Fund Utilization', verbose_name='Fund Utilization')),
                ('problems_and_constraints_file', models.FileField(upload_to='RLC Applications/Progress Reports/Problems and Constraints', verbose_name='Problems and Constraints')),
                ('project_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rlcapp.applications', verbose_name='Project Title')),
            ],
            options={
                'verbose_name_plural': 'Progress Reports',
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_name', models.CharField(default='', max_length=200, verbose_name='Office Name')),
                ('is_department', models.BooleanField(default=True, verbose_name='Is Department?')),
                ('parent_office', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='rlcapp.office')),
            ],
        ),
        migrations.AddField(
            model_name='faculty',
            name='college',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_department': False}, null=True, on_delete=django.db.models.deletion.PROTECT, to='rlcapp.office'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='department',
            field=models.ForeignKey(blank=True, limit_choices_to={'is_department': True}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='rlcapp.office'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
